const n=(t=0,r=0,e=0)=>new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,t,r,e,1]),s=(t=1,r=1,e=1)=>new Float32Array([t,0,0,0,0,r,0,0,0,0,e,0,0,0,0,1]),o=(t=0)=>{const r=Math.sin(t),e=Math.cos(t);return new Float32Array([e,r,0,0,-r,e,0,0,0,0,1,0,0,0,0,1])},c=(t,r)=>{const e=new Float32Array(16);for(let a=0;a<4;a++)e[a]=t[a]*r[0]+t[a+4]*r[1]+t[a+8]*r[2]+t[a+12]*r[3],e[a+4]=t[a]*r[4]+t[a+4]*r[5]+t[a+8]*r[6]+t[a+12]*r[7],e[a+8]=t[a]*r[8]+t[a+4]*r[9]+t[a+8]*r[10]+t[a+12]*r[11],e[a+12]=t[a]*r[12]+t[a+4]*r[13]+t[a+8]*r[14]+t[a+12]*r[15];return e};export{s as a,o as b,c,n as g};
